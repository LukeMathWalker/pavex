diff --git a/app/src/user_agent.rs b/app/src/user_agent.rs
--- a/app/src/user_agent.rs
+++ b/app/src/user_agent.rs
@@ -1,6 +1,7 @@
 use pavex::http::header::{ToStrError, USER_AGENT};
 use pavex::methods;
 use pavex::request::RequestHead;
+use pavex::response::Response;

 pub enum UserAgent {
     /// No `User-Agent` header was provided.
@@ -11,8 +12,8 @@ pub enum UserAgent {

 #[methods]
 impl UserAgent {
-    #[request_scoped]
-    pub fn extract(request_head: &RequestHead) -> Result<Self, ToStrError /* (1)! */> {
+    #[request_scoped(error_handler = "crate::user_agent::invalid_user_agent")]
+    pub fn extract(request_head: &RequestHead) -> Result<Self, ToStrError> {
         let Some(user_agent) = request_head.headers.get(USER_AGENT) else {
             return Ok(UserAgent::Unknown);
         };
@@ -20,3 +21,8 @@ impl UserAgent {
         user_agent.to_str().map(|s| UserAgent::Known(s.into()))
     }
 }
+
+pub fn invalid_user_agent(_e: &ToStrError) -> Response {
+    let body = "The `User-Agent` header value can only use ASCII printable characters.";
+    Response::bad_request().set_typed_body(body)
+}

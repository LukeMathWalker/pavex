name: 'Finalize check'
description: 'Set check status'
inputs:
  pr_number:
    description: 'The number of the PR'
    required: true
  job:
    description: 'Name of the check'
    required: true
  conclusion:
    description: 'Final status'
    required: true
  github_token:
    description: 'GitHub token'
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v6
      id: update-check-run
      if: ${{ always() }}
      env:
        number: ${{ inputs.pr_number }}
        job: ${{ inputs.job }}
        conclusion: ${{ inputs.conclusion }}
      with:
        github-token: ${{ inputs.github_token }}
        script: |
          const { data: pull } = await github.rest.pulls.get({
            ...context.repo,
            pull_number: process.env.number
          });
          const ref = pull.head.sha;
          
          const { data: checks } = await github.rest.checks.listForRef({
            ...context.repo,
            ref
          });
          
          const check = checks.check_runs.filter(c => c.name === process.env.job);
          
          const { data: result } = await github.rest.checks.update({
            ...context.repo,
            check_run_id: check[0].id,
            status: 'completed',
            conclusion: process.env.conclusion
          });
          
          return result;

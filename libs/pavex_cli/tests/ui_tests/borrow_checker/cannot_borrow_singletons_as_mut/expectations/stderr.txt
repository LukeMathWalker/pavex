[31m[1mERROR[0m[39m: 
  [31mÃ—[0m You can't inject a mutable reference to a singleton (`&mut app::A`) as an
  [31mâ”‚[0m input parameter to `app::handler`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:18:1]
  [31mâ”‚[0m  [2m18[0m â”‚     bp.singleton(f!(self::build));
  [31mâ”‚[0m  [2m19[0m â”‚     bp.route(GET, "/", f!(self::handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                [35;1mâ•°â”€â”€ The request handler was registered here[0m
  [31mâ”‚[0m  [2m20[0m â”‚     bp
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:11:1]
  [31mâ”‚[0m  [2m11[0m â”‚ 
  [31mâ”‚[0m  [2m12[0m â”‚ pub fn handler(_a: &mut A) -> Response {
  [31mâ”‚[0m     Â· [35;1m               â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                     [35;1mâ•°â”€â”€ The &mut singleton[0m
  [31mâ”‚[0m  [2m13[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mSingletons can only be taken via a shared reference (`&`) or by
  [31mâ”‚[0m         value (if cloneable). If you absolutely need to mutate a singleton,
  [31mâ”‚[0m         consider internal mutability (e.g. `Arc<Mutex<..>>`).
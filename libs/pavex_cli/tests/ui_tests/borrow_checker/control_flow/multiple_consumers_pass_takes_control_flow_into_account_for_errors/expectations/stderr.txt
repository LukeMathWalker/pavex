[31m[1mERROR[0m[39m: 
  [31mÃ—[0m I can't generate code that will pass the borrow checker *and* match the
  [31mâ”‚[0m instructions in your blueprint.
  [31mâ”‚[0m There are 2 that take `app::B` as an input parameter, consuming it by
  [31mâ”‚[0m value. Since I cannot clone `app::B`, I can't resolve this conflict.
  [31mâ”‚[0m
  [31mâ”‚[0m   [36mhelp:[0m Allow me to clone `app::B` in order to satisfy the borrow checker.
  [31mâ”‚[0m         You can do so by invoking `.cloning(CloningStrategy::CloneIfNecessary)`
  [31mâ”‚[0m         on the type returned by `.constructor`.
  [31mâ”‚[0m        â˜ž
  [31mâ”‚[0m           â•­â”€[[36;1;4msrc/lib.rs[0m:65:1]
  [31mâ”‚[0m        [2m65[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m        [2m66[0m â”‚     bp.constructor(f!(crate::b), Lifecycle::RequestScoped);
  [31mâ”‚[0m           Â· [35;1m                   â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m           Â·                          [35;1mâ•°â”€â”€ [35;1mThe constructor was registered here[0m[0m
  [31mâ”‚[0m        [2m67[0m â”‚     bp.constructor(f!(crate::c), Lifecycle::RequestScoped);
  [31mâ”‚[0m           â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Considering changing the signature of the constructors that consume
  [31mâ”‚[0m         `app::B` by value.
  [31mâ”‚[0m         Would a shared reference, `&app::B`, be enough?
  [31mâ”‚[0m        â˜ž
  [31mâ”‚[0m           â•­â”€[[36;1;4msrc/lib.rs[0m:67:1]
  [31mâ”‚[0m        [2m67[0m â”‚     bp.constructor(f!(crate::c), Lifecycle::RequestScoped);
  [31mâ”‚[0m        [2m68[0m â”‚     bp.route(GET, "/home", f!(crate::handler));
  [31mâ”‚[0m           Â· [35;1m                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m           Â·                                     [35;1mâ•°â”€â”€ [35;1mOne of the consuming constructors[0m[0m
  [31mâ”‚[0m        [2m69[0m â”‚     bp
  [31mâ”‚[0m           â•°â”€â”€â”€â”€
  [31mâ”‚[0m        â˜ž
  [31mâ”‚[0m           â•­â”€[[36;1;4msrc/lib.rs[0m:66:1]
  [31mâ”‚[0m        [2m66[0m â”‚     bp.constructor(f!(crate::b), Lifecycle::RequestScoped);
  [31mâ”‚[0m        [2m67[0m â”‚     bp.constructor(f!(crate::c), Lifecycle::RequestScoped);
  [31mâ”‚[0m           Â· [35;1m                   â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m           Â·                          [35;1mâ•°â”€â”€ [35;1mOne of the consuming constructors[0m[0m
  [31mâ”‚[0m        [2m68[0m â”‚     bp.route(GET, "/home", f!(crate::handler));
  [31mâ”‚[0m           â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m If `app::B` itself cannot implement `Clone`, consider wrapping it in
  [31mâ”‚[0m         an `std::sync::Rc` or `std::sync::Arc`.
digraph "GET /home - 0" {
    0 [ label = "app::handler(&app::B) -> pavex::response::Response"]
    1 [ label = "core::prelude::rust_2015::Result<app::B, app::AnError> -> app::B"]
    2 [ label = "app::b(&app::A) -> core::prelude::rust_2015::Result<app::B, app::AnError>"]
    4 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    5 [ label = "core::prelude::rust_2015::Result<app::B, app::AnError> -> app::AnError"]
    6 [ label = "pavex::Error::new(app::AnError) -> pavex::Error"]
    7 [ label = "app::error_handler(&app::A, &app::AnError) -> pavex::response::Response"]
    8 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    9 [ label = "app::error_observer(&app::A, &pavex::Error)"]
    10 [ label = "`match`"]
    11 [ label = "&app::A"]
    1 -> 0 [ label = "&"]
    10 -> 5 [ ]
    10 -> 1 [ ]
    0 -> 4 [ ]
    5 -> 7 [ label = "&"]
    5 -> 6 [ ]
    7 -> 8 [ ]
    6 -> 9 [ label = "&"]
    9 -> 8 [ label = "happens before"]
    2 -> 10 [ ]
    11 -> 9 [ ]
    11 -> 7 [ ]
    11 -> 2 [ ]
}

digraph "* /home - 0" {
    0 [ label = "pavex::router::default_fallback(&pavex::router::AllowedMethods) -> pavex::response::Response"]
    2 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    3 [ label = "&pavex::router::AllowedMethods"]
    0 -> 2 [ ]
    3 -> 0 [ ]
}

digraph app_state {
    0 [ label = "crate::ApplicationState(app::A) -> crate::ApplicationState"]
    1 [ label = "core::prelude::rust_2015::Result<app::A, app::AnError> -> app::A"]
    2 [ label = "app::a() -> core::prelude::rust_2015::Result<app::A, app::AnError>"]
    3 [ label = "core::result::Result::Ok(crate::ApplicationState) -> core::result::Result<crate::ApplicationState, crate::ApplicationStateError>"]
    4 [ label = "core::prelude::rust_2015::Result<app::A, app::AnError> -> app::AnError"]
    5 [ label = "crate::ApplicationStateError::A(app::AnError) -> crate::ApplicationStateError"]
    6 [ label = "core::result::Result::Err(crate::ApplicationStateError) -> core::result::Result<crate::ApplicationState, crate::ApplicationStateError>"]
    7 [ label = "`match`"]
    1 -> 0 [ ]
    7 -> 4 [ ]
    7 -> 1 [ ]
    0 -> 3 [ ]
    4 -> 5 [ ]
    5 -> 6 [ ]
    2 -> 7 [ ]
}
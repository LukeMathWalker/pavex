[31m[1mERROR[0m[39m: 
  [31mÃ—[0m Singletons can't depend on request-scoped components.
  [31mâ”‚[0m They are constructed before the application starts, outside of the
  [31mâ”‚[0m request-response lifecycle.
  [31mâ”‚[0m But your singleton `app::A` depends on `app::B`, which
  [31mâ”‚[0m has a request-scoped lifecycle.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mdependency_injection/lifecycles/singletons_cannot_depend_on_request_scoped/src/lib.rs[0m:29:1]
  [31mâ”‚[0m  [2m29[0m â”‚     let mut bp = Blueprint::new();
  [31mâ”‚[0m  [2m30[0m â”‚     bp.constructor(f!(crate::a), Lifecycle::Singleton);
  [31mâ”‚[0m     Â· [35;1m                   â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                          [35;1mâ•°â”€â”€ The singleton was registered here[0m
  [31mâ”‚[0m  [2m31[0m â”‚     bp.constructor(f!(crate::b), Lifecycle::RequestScoped);
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mdependency_injection/lifecycles/singletons_cannot_depend_on_request_scoped/src/lib.rs[0m:30:1]
  [31mâ”‚[0m  [2m30[0m â”‚     bp.constructor(f!(crate::a), Lifecycle::Singleton);
  [31mâ”‚[0m  [2m31[0m â”‚     bp.constructor(f!(crate::b), Lifecycle::RequestScoped);
  [31mâ”‚[0m     Â· [35;1m                   â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·             [35;1mThe request-scoped dependency was registered here[0m
  [31mâ”‚[0m  [2m32[0m â”‚     bp.constructor(f!(crate::c), Lifecycle::Transient);
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
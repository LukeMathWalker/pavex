[31m[1mERROR[0m[39m: 
  [31mÃ—[0m I am not smart enough to figure out the concrete type for all the generic
  [31mâ”‚[0m parameters in `app::generic_constructor`.
  [31mâ”‚[0m I can only infer the type of an unassigned generic parameter if it appears
  [31mâ”‚[0m in the output type returned by the constructor. This is not the case for
  [31mâ”‚[0m `T`, since it is only used by the input parameters.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:19:1]
  [31mâ”‚[0m  [2m19[0m â”‚     let mut bp = Blueprint::new();
  [31mâ”‚[0m  [2m20[0m â”‚     Constructor::new(f!(crate::generic_constructor), Lifecycle::RequestScoped).register(&mut bp);
  [31mâ”‚[0m     Â· [35;1m                     â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                     [35;1mâ•°â”€â”€ The constructor was registered here[0m
  [31mâ”‚[0m  [2m21[0m â”‚     bp.route(GET, "/home", f!(crate::handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m    â•­â”€[[36;1;4msrc/lib.rs[0m:1:1]
  [31mâ”‚[0m  [2m1[0m â”‚ pub fn generic_constructor<T>(generic_input: GenericType<T>) -> u8 {
  [31mâ”‚[0m    Â· [35;1m                           â”¬[0m[33;1m                                    â”€â”¬[0m
  [31mâ”‚[0m    Â·                            [35;1mâ”‚[0m     [33;1m..because it is not used here â”€â”€â•¯[0m
  [31mâ”‚[0m    Â·                            [35;1mâ•°â”€â”€ I can't infer this..[0m
  [31mâ”‚[0m  [2m2[0m â”‚     todo!()
  [31mâ”‚[0m    â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mSpecify the concrete type(s) for the problematic generic
  [31mâ”‚[0m         parameter(s) when registering the constructor against the blueprint:
  [31mâ”‚[0m         |  bp.constructor(
  [31mâ”‚[0m         |    f!(my_crate::my_constructor::<ConcreteType>),
  [31mâ”‚[0m         |    ..
  [31mâ”‚[0m         |  )
[31m[1mERROR[0m[39m: 
  [31mÃ—[0m Routing logic can't be ambiguous.
  [31mâ”‚[0m You registered `app::fallback1` as the fallback handler for all unmatched
  [31mâ”‚[0m incoming requests with a path that begins in `/users`.
  [31mâ”‚[0m But `POST /users/yo` wasn't registered against that blueprint!
  [31mâ”‚[0m It was registered under a different blueprint, with a different fallback
  [31mâ”‚[0m handler: `pavex::router::default_fallback`.
  [31mâ”‚[0m I can't determine which fallback is the most appropriate one for incoming
  [31mâ”‚[0m `/users/yo` requests with a method that doesn't match the ones you
  [31mâ”‚[0m registered a handler for.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:26:1]
  [31mâ”‚[0m  [2m26[0m â”‚     });
  [31mâ”‚[0m  [2m27[0m â”‚     bp.route(POST, "/users/yo", f!(crate::handler));
  [31mâ”‚[0m     Â· [35;1m                   â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                         [35;1mâ•°â”€â”€ The route was registered here[0m
  [31mâ”‚[0m  [2m28[0m â”‚     bp
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mYou can fix this by registering `POST /users/yo` against the nested
  [31mâ”‚[0m         blueprint with `/users` as prefix. All `/users`-prefixed routes
  [31mâ”‚[0m         would then be using `app::fallback1` as fallback.
digraph "* /users*catch_all - 0" {
    0 [ label = "pavex::middleware::wrap_noop(pavex::middleware::Next<crate::route_2::Next0>) -> pavex::response::Response"]
    1 [ label = "pavex::middleware::Next::new(crate::route_2::Next0) -> pavex::middleware::Next<crate::route_2::Next0>"]
    2 [ label = "crate::route_2::Next0() -> crate::route_2::Next0"]
    3 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    1 -> 0 [ ]
    2 -> 1 [ ]
    0 -> 3 [ ]
}

digraph "* /users*catch_all - 1" {
    0 [ label = "app::unauthorized() -> pavex::response::Response"]
    1 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    0 -> 1 [ ]
}

digraph "GET /users/ - 0" {
    0 [ label = "pavex::middleware::wrap_noop(pavex::middleware::Next<crate::route_1::Next0>) -> pavex::response::Response"]
    1 [ label = "pavex::middleware::Next::new(crate::route_1::Next0) -> pavex::middleware::Next<crate::route_1::Next0>"]
    2 [ label = "crate::route_1::Next0() -> crate::route_1::Next0"]
    3 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    1 -> 0 [ ]
    2 -> 1 [ ]
    0 -> 3 [ ]
}

digraph "GET /users/ - 1" {
    0 [ label = "app::handler() -> pavex::response::Response"]
    1 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    0 -> 1 [ ]
}

digraph "* /users/ - 0" {
    0 [ label = "pavex::middleware::wrap_noop(pavex::middleware::Next<crate::route_2::Next0>) -> pavex::response::Response"]
    1 [ label = "pavex::middleware::Next::new(crate::route_2::Next0) -> pavex::middleware::Next<crate::route_2::Next0>"]
    2 [ label = "crate::route_2::Next0() -> crate::route_2::Next0"]
    3 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    1 -> 0 [ ]
    2 -> 1 [ ]
    0 -> 3 [ ]
}

digraph "* /users/ - 1" {
    0 [ label = "app::unauthorized() -> pavex::response::Response"]
    1 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    0 -> 1 [ ]
}

digraph "GET /users/id - 0" {
    0 [ label = "pavex::middleware::wrap_noop(pavex::middleware::Next<crate::route_3::Next0>) -> pavex::response::Response"]
    1 [ label = "pavex::middleware::Next::new(crate::route_3::Next0) -> pavex::middleware::Next<crate::route_3::Next0>"]
    2 [ label = "crate::route_3::Next0() -> crate::route_3::Next0"]
    3 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    1 -> 0 [ ]
    2 -> 1 [ ]
    0 -> 3 [ ]
}

digraph "GET /users/id - 1" {
    0 [ label = "app::handler() -> pavex::response::Response"]
    1 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    0 -> 1 [ ]
}

digraph "* /users/id - 0" {
    0 [ label = "pavex::middleware::wrap_noop(pavex::middleware::Next<crate::route_4::Next0>) -> pavex::response::Response"]
    1 [ label = "pavex::middleware::Next::new(crate::route_4::Next0) -> pavex::middleware::Next<crate::route_4::Next0>"]
    2 [ label = "crate::route_4::Next0() -> crate::route_4::Next0"]
    3 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    1 -> 0 [ ]
    2 -> 1 [ ]
    0 -> 3 [ ]
}

digraph "* /users/id - 1" {
    0 [ label = "app::forbidden() -> pavex::response::Response"]
    1 [ label = "<pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    0 -> 1 [ ]
}

digraph app_state {
    0 [ label = "crate::ApplicationState() -> crate::ApplicationState"]
}
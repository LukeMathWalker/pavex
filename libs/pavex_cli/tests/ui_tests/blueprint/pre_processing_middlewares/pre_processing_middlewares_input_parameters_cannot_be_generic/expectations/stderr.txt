[31m[1mERROR[0m[39m: 
  [31mÃ—[0m There must be no unassigned generic parameters in pre-processing
  [31mâ”‚[0m middlewares, but `T` does not seem to have been assigned a concrete type
  [31mâ”‚[0m in `app::generic`.
  [31mâ”‚[0m
  [31mâ”‚[0m    â•­â”€[[36;1;4msrc/lib.rs[0m:7:1]
  [31mâ”‚[0m  [2m7[0m â”‚ 
  [31mâ”‚[0m  [2m8[0m â”‚ pub fn generic<T>(generic_input: GenericType<T>) -> Processing {
  [31mâ”‚[0m    Â· [35;1m               â”¬[0m
  [31mâ”‚[0m    Â·                [35;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m  [2m9[0m â”‚     todo!()
  [31mâ”‚[0m    â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mSpecify the concrete type for `T` when registering the pre-
  [31mâ”‚[0m         processing middleware against the blueprint:
  [31mâ”‚[0m         |  bp.pre_process(
  [31mâ”‚[0m         |    f!(my_crate::my_middleware::<ConcreteType>),
  [31mâ”‚[0m         |  )

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m There must be no unassigned generic parameters in pre-processing
  [31mâ”‚[0m middlewares, but `T` and `S` do not seem to have been assigned a concrete
  [31mâ”‚[0m type in `app::doubly_generic`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:11:1]
  [31mâ”‚[0m  [2m11[0m â”‚ 
  [31mâ”‚[0m  [2m12[0m â”‚ pub fn doubly_generic<T, S>(i1: GenericType<T>, i2: GenericType<S>) -> Processing {
  [31mâ”‚[0m     Â· [35;1m                      â”¬[0m[33;1m  â”¬[0m
  [31mâ”‚[0m     Â·                       [35;1mâ”‚[0m  [33;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m     Â·                       [35;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m  [2m13[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mSpecify the concrete types for `T` and `S` when registering the pre-
  [31mâ”‚[0m         processing middleware against the blueprint:
  [31mâ”‚[0m         |  bp.pre_process(
  [31mâ”‚[0m         |    f!(my_crate::my_middleware::<ConcreteType>),
  [31mâ”‚[0m         |  )

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m There must be no unassigned generic parameters in pre-processing
  [31mâ”‚[0m middlewares, but `T`, `S` and `U` do not seem to have been assigned a
  [31mâ”‚[0m concrete type in `app::triply_generic`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:15:1]
  [31mâ”‚[0m  [2m15[0m â”‚ 
  [31mâ”‚[0m  [2m16[0m â”‚ pub fn triply_generic<T, S, U>(
  [31mâ”‚[0m     Â· [35;1m                      â”¬[0m[33;1m  â”¬[0m[32;1m  â”¬[0m
  [31mâ”‚[0m     Â·                       [35;1mâ”‚[0m  [33;1mâ”‚[0m  [32;1mThe generic parameter without a concrete type[0m
  [31mâ”‚[0m     Â·                       [35;1mâ”‚[0m  [33;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m     Â·                       [35;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m  [2m17[0m â”‚     i1: GenericType<T>,
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mSpecify the concrete types for `T`, `S` and `U` when registering the
  [31mâ”‚[0m         pre-processing middleware against the blueprint:
  [31mâ”‚[0m         |  bp.pre_process(
  [31mâ”‚[0m         |    f!(my_crate::my_middleware::<ConcreteType>),
  [31mâ”‚[0m         |  )
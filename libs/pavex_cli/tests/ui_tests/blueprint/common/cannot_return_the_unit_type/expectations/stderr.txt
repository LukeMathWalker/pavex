[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All request handlers must return a type that can be converted into a
  [31mâ”‚[0m `pavex::response::Response`.
  [31mâ”‚[0m This request handler doesn't: it returns the unit type, `()`. I can't
  [31mâ”‚[0m convert `()` into an HTTP response.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:79:1]
  [31mâ”‚[0m  [2m79[0m â”‚     bp.route(GET, "/home", f!(crate::handler));
  [31mâ”‚[0m  [2m80[0m â”‚     bp.route(GET, "/unit", f!(crate::unit_handler));
  [31mâ”‚[0m     Â· [35;1m                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                  [35;1mThe request handler was registered here[0m
  [31mâ”‚[0m  [2m81[0m â”‚     bp.route(GET, "/fallible_unit", f!(crate::fallible_unit_handler))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All request handlers must return a type that can be converted into a
  [31mâ”‚[0m `pavex::response::Response`.
  [31mâ”‚[0m This request handler doesn't: it returns the unit type, `()`, when
  [31mâ”‚[0m successful. I can't convert `()` into an HTTP response.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:80:1]
  [31mâ”‚[0m  [2m80[0m â”‚     bp.route(GET, "/unit", f!(crate::unit_handler));
  [31mâ”‚[0m  [2m81[0m â”‚     bp.route(GET, "/fallible_unit", f!(crate::fallible_unit_handler))
  [31mâ”‚[0m     Â· [35;1m                                    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·           [35;1mThe request handler was registered here â”€â”€â•¯[0m
  [31mâ”‚[0m  [2m82[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All constructors must return *something*.
  [31mâ”‚[0m This constructor doesn't: it returns the unit type, `()`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:61:1]
  [31mâ”‚[0m  [2m61[0m â”‚     let mut bp = Blueprint::new();
  [31mâ”‚[0m  [2m62[0m â”‚     bp.constructor(f!(crate::constructor), Lifecycle::Singleton);
  [31mâ”‚[0m     Â· [35;1m                   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                               [35;1mâ•°â”€â”€ The constructor was registered here[0m
  [31mâ”‚[0m  [2m63[0m â”‚     bp.request_scoped(f!(crate::fallible_unit_constructor));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All fallible constructors must return *something* when successful.
  [31mâ”‚[0m This fallible constructor doesn't: it returns the unit type when
  [31mâ”‚[0m successful, `Ok(())`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:62:1]
  [31mâ”‚[0m  [2m62[0m â”‚     bp.constructor(f!(crate::constructor), Lifecycle::Singleton);
  [31mâ”‚[0m  [2m63[0m â”‚     bp.request_scoped(f!(crate::fallible_unit_constructor));
  [31mâ”‚[0m     Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·   [35;1mThe constructor was registered here â”€â”€â•¯[0m
  [31mâ”‚[0m  [2m64[0m â”‚     bp.request_scoped(f!(crate::fallible_constructor))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m Wrapping middlewares must return a type that can be converted into a
  [31mâ”‚[0m `pavex::response::Response`.
  [31mâ”‚[0m This middleware doesn't: it returns the unit type, `()`. I can't convert
  [31mâ”‚[0m `()` into an HTTP response.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:70:1]
  [31mâ”‚[0m  [2m70[0m â”‚ 
  [31mâ”‚[0m  [2m71[0m â”‚     bp.wrap(f!(crate::unit_wrapping));
  [31mâ”‚[0m     Â· [35;1m            â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                         [35;1mâ•°â”€â”€ The wrapping middleware was registered here[0m
  [31mâ”‚[0m  [2m72[0m â”‚     bp.wrap(f!(crate::fallible_unit_wrapping))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m Wrapping middlewares must return a type that can be converted into a
  [31mâ”‚[0m `pavex::response::Response`.
  [31mâ”‚[0m This middleware doesn't: it returns the unit type, `()`, when successful.
  [31mâ”‚[0m I can't convert `()` into an HTTP response.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:71:1]
  [31mâ”‚[0m  [2m71[0m â”‚     bp.wrap(f!(crate::unit_wrapping));
  [31mâ”‚[0m  [2m72[0m â”‚     bp.wrap(f!(crate::fallible_unit_wrapping))
  [31mâ”‚[0m     Â· [35;1m            â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                [35;1mThe wrapping middleware was registered here[0m
  [31mâ”‚[0m  [2m73[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m Pre-processing middlewares must return `pavex::middleware::Processing`.
  [31mâ”‚[0m This middleware doesn't: it returns the unit type, `()`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:66:1]
  [31mâ”‚[0m  [2m66[0m â”‚ 
  [31mâ”‚[0m  [2m67[0m â”‚     bp.pre_process(f!(crate::unit_pre));
  [31mâ”‚[0m     Â· [35;1m                   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·             [35;1mThe pre-processing middleware was registered here[0m
  [31mâ”‚[0m  [2m68[0m â”‚     bp.pre_process(f!(crate::fallible_unit_pre))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m Pre-processing middlewares must return `pavex::middleware::Processing`
  [31mâ”‚[0m when successful.
  [31mâ”‚[0m This middleware doesn't: it returns the unit type, `()`, when successful.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:67:1]
  [31mâ”‚[0m  [2m67[0m â”‚     bp.pre_process(f!(crate::unit_pre));
  [31mâ”‚[0m  [2m68[0m â”‚     bp.pre_process(f!(crate::fallible_unit_pre))
  [31mâ”‚[0m     Â· [35;1m                   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·             [35;1mThe pre-processing middleware was registered here[0m
  [31mâ”‚[0m  [2m69[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m Post-processing middlewares must return a type that can be converted into
  [31mâ”‚[0m a `pavex::response::Response`.
  [31mâ”‚[0m This middleware doesn't: it returns the unit type, `()`. I can't convert
  [31mâ”‚[0m `()` into an HTTP response.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:74:1]
  [31mâ”‚[0m  [2m74[0m â”‚ 
  [31mâ”‚[0m  [2m75[0m â”‚     bp.post_process(f!(crate::unit_post));
  [31mâ”‚[0m     Â· [35;1m                    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·             [35;1mThe post-processing middleware was registered here[0m
  [31mâ”‚[0m  [2m76[0m â”‚     bp.post_process(f!(crate::fallible_unit_post))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m Post-processing middlewares must return a type that can be converted into
  [31mâ”‚[0m a `pavex::response::Response`.
  [31mâ”‚[0m This middleware doesn't: it returns the unit type, `()`, when successful.
  [31mâ”‚[0m I can't convert `()` into an HTTP response.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:75:1]
  [31mâ”‚[0m  [2m75[0m â”‚     bp.post_process(f!(crate::unit_post));
  [31mâ”‚[0m  [2m76[0m â”‚     bp.post_process(f!(crate::fallible_unit_post))
  [31mâ”‚[0m     Â· [35;1m                    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·             [35;1mThe post-processing middleware was registered here[0m
  [31mâ”‚[0m  [2m77[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All error handlers must return a type that implements
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m `app::error_handler` doesn't, it returns the unit type, `()`. I can't
  [31mâ”‚[0m convert `()` into an HTTP response!
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:64:1]
  [31mâ”‚[0m  [2m64[0m â”‚     bp.request_scoped(f!(crate::fallible_constructor))
  [31mâ”‚[0m  [2m65[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m66[0m â”‚ 
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All error handlers must return a type that implements
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m `app::error_handler` doesn't, it returns the unit type, `()`. I can't
  [31mâ”‚[0m convert `()` into an HTTP response!
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:68:1]
  [31mâ”‚[0m  [2m68[0m â”‚     bp.pre_process(f!(crate::fallible_unit_pre))
  [31mâ”‚[0m  [2m69[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m70[0m â”‚ 
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All error handlers must return a type that implements
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m `app::error_handler` doesn't, it returns the unit type, `()`. I can't
  [31mâ”‚[0m convert `()` into an HTTP response!
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:72:1]
  [31mâ”‚[0m  [2m72[0m â”‚     bp.wrap(f!(crate::fallible_unit_wrapping))
  [31mâ”‚[0m  [2m73[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m74[0m â”‚ 
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All error handlers must return a type that implements
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m `app::error_handler` doesn't, it returns the unit type, `()`. I can't
  [31mâ”‚[0m convert `()` into an HTTP response!
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:76:1]
  [31mâ”‚[0m  [2m76[0m â”‚     bp.post_process(f!(crate::fallible_unit_post))
  [31mâ”‚[0m  [2m77[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m78[0m â”‚ 
  [31mâ”‚[0m     â•°â”€â”€â”€â”€

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m All error handlers must return a type that implements
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m `app::error_handler` doesn't, it returns the unit type, `()`. I can't
  [31mâ”‚[0m convert `()` into an HTTP response!
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4msrc/lib.rs[0m:81:1]
  [31mâ”‚[0m  [2m81[0m â”‚     bp.route(GET, "/fallible_unit", f!(crate::fallible_unit_handler))
  [31mâ”‚[0m  [2m82[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m83[0m â”‚     bp
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
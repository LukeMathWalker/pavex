[workspace]
changelog_update = false
git_release_enable = false
git_tag_enable = false
semver_check = false
pr_labels = ["release"]
# This is necessary since we need to remove the
# workspace_hack crate in CI before publishing
allow_dirty = true

[changelog]
header = """# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

## [Unreleased]
"""

body = """

## [{{ version | trim_start_matches(pat="v") }}]\
    {%- if release_link -%}\
        ({{ release_link }})\
    {% endif %} \
    - {{ timestamp | date(format="%Y-%m-%d") }}
{% for group, commits in commits | group_by(attribute="group") %}
{% if group != "other" %}
### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        {%- if commit.scope -%}
            - *({{commit.scope}})* {% if commit.breaking %}[**breaking**] {% endif %}\
                {{ commit.message }}{{ self::username(commit=commit) }}\
                {%- if commit.links %} \
                    ({% for link in commit.links %}[{{link.text}}]({{link.href}}) {% endfor -%})\
                {% endif %}
        {% else -%}
            - {% if commit.breaking %}[**breaking**] {% endif %}{{ commit.message }}{{ self::username(commit=commit) }}{{ self::pr(commit=commit) }}
        {% endif -%}
    {% endfor -%}
{% endif %}
{% endfor %}
{%- if remote.contributors %}
### Contributors
{% for contributor in remote.contributors %}
    * @{{ contributor.username }}
{%- endfor %}
{% endif -%}
{%- macro username(commit) -%}
    {% if commit.remote.username %} (by @{{ commit.remote.username }}){% endif -%}
{% endmacro -%}
{%- macro pr(commit) -%}
    {% if commit.remote.pr_number %} - #{{ commit.remote.pr_number }}{% endif -%}
{% endmacro -%}
"""

commit_parsers = [
    { message = "^feat", group = "<!-- 0 -->‚õ∞Ô∏è Features" },
    { message = "^fix", group = "<!-- 1 -->üêõ Bug Fixes" },
    { message = "^deprecated", group = "<!-- 2 --> ‚ö†Ô∏è Deprecations" },
    { message = "^perf", group = "<!-- 3 -->‚ö° Performance" },
    { message = "^doc", group = "<!-- 4 -->üìö Documentation" },
    { body = ".*security", group = "<!-- 5 -->üõ°Ô∏è Security" },
    { message = "^test", group = "<!-- 6 -->üß™ Testing" },
    { message = "^.*", group = "other" },
]

[[package]]
name = "pavex"
changelog_update = true
changelog_include = [
    "pavex_cli",
    "pavexc",
    "pavexc_cli",
    "pavex_tracing",
    "pavex_cli_client",
    "pavexc_cli_client",
    "pavex_macros",
    "pavex_reflection",
    "pavex_miette",
    "pavex_bp_schema",
]
changelog_path = "../CHANGELOG.md"
git_tag_name = "{{ version }}"
git_tag_enable = true

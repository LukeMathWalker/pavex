digraph "* * - 0" {
    0 [ label = "0| &pavex::router::AllowedMethods"]
    1 [ label = "1| crate::route_0::Next0(&'a pavex::router::AllowedMethods) -> crate::route_0::Next0<'a>"]
    2 [ label = "2| pavex::middleware::Next::new(crate::route_0::Next0<'a>) -> pavex::middleware::Next<crate::route_0::Next0<'a>>"]
    3 [ label = "3| pavex::middleware::wrap_noop(pavex::middleware::Next<crate::route_0::Next0<'a>>) -> pavex::response::Response"]
    4 [ label = "4| <pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    2 -> 3 [ ]
    1 -> 2 [ ]
    3 -> 4 [ ]
    0 -> 1 [ ]
}
digraph "* * - 1" {
    0 [ label = "0| &pavex::router::AllowedMethods"]
    1 [ label = "1| pavex::router::default_fallback(&pavex::router::AllowedMethods) -> pavex::response::Response"]
    2 [ label = "2| <pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    1 -> 2 [ ]
    0 -> 1 [ ]
}
digraph "GET / - 0" {
    0 [ label = "0| app::A"]
    1 [ label = "1| &app::B"]
    2 [ label = "2| crate::route_1::Next0(app::A, &'a app::B) -> crate::route_1::Next0<'a>"]
    3 [ label = "3| pavex::middleware::Next::new(crate::route_1::Next0<'a>) -> pavex::middleware::Next<crate::route_1::Next0<'a>>"]
    4 [ label = "4| pavex::middleware::wrap_noop(pavex::middleware::Next<crate::route_1::Next0<'a>>) -> pavex::response::Response"]
    5 [ label = "5| <pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    3 -> 4 [ ]
    2 -> 3 [ ]
    0 -> 2 [ ]
    4 -> 5 [ ]
    1 -> 2 [ ]
}
digraph "GET / - 1" {
    0 [ label = "0| app::A"]
    1 [ label = "1| &app::B"]
    2 [ label = "2| app::handler(app::A, &app::B) -> pavex::response::Response"]
    3 [ label = "3| <pavex::response::Response as pavex::response::IntoResponse>::into_response(pavex::response::Response) -> pavex::response::Response"]
    0 -> 2 [ ]
    2 -> 3 [ ]
    1 -> 2 [ ]
}
digraph app_state {
    0 [ label = "0| app::A"]
    1 [ label = "1| <app::A as core::clone::Clone>::clone(&app::A) -> app::A"]
    2 [ label = "2| app::b(app::A) -> app::B"]
    3 [ label = "3| crate::ApplicationState(app::A, app::B) -> crate::ApplicationState"]
    2 -> 3 [ ]
    0 -> 2 [ ]
    0 -> 1 [ label = "&"]
    1 -> 3 [ ]
}
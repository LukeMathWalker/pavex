[31m[1mERROR[0m[39m: 
  [31mÃ—[0m I am not smart enough to figure out the concrete type for all the generic
  [31mâ”‚[0m parameters in `app::generic_constructor`.
  [31mâ”‚[0m I can only infer the type of an unassigned generic parameter if it appears
  [31mâ”‚[0m in the output type returned by the constructor. This is not the case for
  [31mâ”‚[0m `T`, since it is only used by the input parameters.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/constructors/constructors_input_parameters_cannot_be_generic/src/lib.rs[0m:27:1]
  [31mâ”‚[0m  [2m27[0m â”‚     let mut bp = Blueprint::new();
  [31mâ”‚[0m  [2m28[0m â”‚     bp.request_scoped(f!(crate::generic_constructor));
  [31mâ”‚[0m     Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                    [35;1mThe constructor was registered here[0m
  [31mâ”‚[0m  [2m29[0m â”‚     bp.request_scoped(f!(crate::doubly_generic_constructor));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m    â•­â”€[[36;1;4mblueprint/constructors/constructors_input_parameters_cannot_be_generic/src/lib.rs[0m:5:1]
  [31mâ”‚[0m  [2m5[0m â”‚ 
  [31mâ”‚[0m  [2m6[0m â”‚ pub fn generic_constructor<T>(generic_input: GenericType<T>) -> u8 {
  [31mâ”‚[0m    Â· [35;1m                           â”¬[0m[33;1m                                    â”€â”¬[0m
  [31mâ”‚[0m    Â·                            [35;1mâ”‚[0m     [33;1m..because it is not used here â”€â”€â•¯[0m
  [31mâ”‚[0m    Â·                            [35;1mâ•°â”€â”€ I can't infer this..[0m
  [31mâ”‚[0m  [2m7[0m â”‚     todo!()
  [31mâ”‚[0m    â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mSpecify the concrete type(s) for the problematic generic
  [31mâ”‚[0m         parameter(s) when registering the constructor against the blueprint:
  [31mâ”‚[0m         |  bp.constructor(
  [31mâ”‚[0m         |    f!(my_crate::my_constructor::<ConcreteType>),
  [31mâ”‚[0m         |    ..
  [31mâ”‚[0m         |  )

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m I am not smart enough to figure out the concrete type for all the generic
  [31mâ”‚[0m parameters in `app::doubly_generic_constructor`.
  [31mâ”‚[0m I can only infer the type of an unassigned generic parameter if it appears
  [31mâ”‚[0m in the output type returned by the constructor. This is not the case for
  [31mâ”‚[0m `T` and `S`, since they are only used by the input parameters.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/constructors/constructors_input_parameters_cannot_be_generic/src/lib.rs[0m:28:1]
  [31mâ”‚[0m  [2m28[0m â”‚     bp.request_scoped(f!(crate::generic_constructor));
  [31mâ”‚[0m  [2m29[0m â”‚     bp.request_scoped(f!(crate::doubly_generic_constructor));
  [31mâ”‚[0m     Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·   [35;1mThe constructor was registered here â”€â”€â•¯[0m
  [31mâ”‚[0m  [2m30[0m â”‚     bp.request_scoped(f!(crate::triply_generic_constructor));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/constructors/constructors_input_parameters_cannot_be_generic/src/lib.rs[0m:9:1]
  [31mâ”‚[0m  [2m 9[0m â”‚ 
  [31mâ”‚[0m  [2m10[0m â”‚ pub fn doubly_generic_constructor<T, S>(i1: GenericType<T>, i2: GenericType<S>) -> u16 {
  [31mâ”‚[0m     Â· [35;1m                                  â”¬[0m[33;1m  â”¬[0m[32;1m                                             â”€â”¬â”€[0m
  [31mâ”‚[0m     Â·                                   [35;1mâ”‚[0m  [33;1mâ”‚[0m           [32;1m..because they are not used here â”€â”€â•¯[0m
  [31mâ”‚[0m     Â·                                   [35;1mâ”‚[0m  [33;1mâ•°â”€â”€ I can't infer this..[0m
  [31mâ”‚[0m     Â·                                   [35;1mâ•°â”€â”€ I can't infer this..[0m
  [31mâ”‚[0m  [2m11[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mSpecify the concrete type(s) for the problematic generic
  [31mâ”‚[0m         parameter(s) when registering the constructor against the blueprint:
  [31mâ”‚[0m         |  bp.constructor(
  [31mâ”‚[0m         |    f!(my_crate::my_constructor::<ConcreteType>),
  [31mâ”‚[0m         |    ..
  [31mâ”‚[0m         |  )

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m I am not smart enough to figure out the concrete type for all the generic
  [31mâ”‚[0m parameters in `app::triply_generic_constructor`.
  [31mâ”‚[0m I can only infer the type of an unassigned generic parameter if it appears
  [31mâ”‚[0m in the output type returned by the constructor. This is not the case for
  [31mâ”‚[0m `T`, `S` and `U`, since they are only used by the input parameters.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/constructors/constructors_input_parameters_cannot_be_generic/src/lib.rs[0m:29:1]
  [31mâ”‚[0m  [2m29[0m â”‚     bp.request_scoped(f!(crate::doubly_generic_constructor));
  [31mâ”‚[0m  [2m30[0m â”‚     bp.request_scoped(f!(crate::triply_generic_constructor));
  [31mâ”‚[0m     Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·   [35;1mThe constructor was registered here â”€â”€â•¯[0m
  [31mâ”‚[0m  [2m31[0m â”‚     bp.route(GET, "/home", f!(crate::handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/constructors/constructors_input_parameters_cannot_be_generic/src/lib.rs[0m:13:1]
  [31mâ”‚[0m  [2m13[0m â”‚ 
  [31mâ”‚[0m  [2m14[0m â”‚ pub fn triply_generic_constructor<T, S, U>(
  [31mâ”‚[0m     Â· [35;1m                                  â”¬[0m[33;1m  â”¬[0m[32;1m  â”¬[0m
  [31mâ”‚[0m     Â·                                   [35;1mâ”‚[0m  [33;1mâ”‚[0m  [32;1mâ•°â”€â”€ I can't infer this..[0m
  [31mâ”‚[0m     Â·                                   [35;1mâ”‚[0m  [33;1mâ•°â”€â”€ I can't infer this..[0m
  [31mâ”‚[0m     Â·                                   [35;1mâ•°â”€â”€ I can't infer this..[0m
  [31mâ”‚[0m  [2m15[0m â”‚     i1: GenericType<T>,
  [31mâ”‚[0m  [2m16[0m â”‚     i2: GenericType<S>,
  [31mâ”‚[0m  [2m17[0m â”‚     i3: GenericType<U>,
  [31mâ”‚[0m  [2m18[0m â”‚ ) -> u32 {
  [31mâ”‚[0m     Â· [35;1m     â”€â”¬â”€[0m
  [31mâ”‚[0m     Â·       [35;1mâ•°â”€â”€ ..because they are not used here[0m
  [31mâ”‚[0m  [2m19[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mSpecify the concrete type(s) for the problematic generic
  [31mâ”‚[0m         parameter(s) when registering the constructor against the blueprint:
  [31mâ”‚[0m         |  bp.constructor(
  [31mâ”‚[0m         |    f!(my_crate::my_constructor::<ConcreteType>),
  [31mâ”‚[0m         |    ..
  [31mâ”‚[0m         |  )
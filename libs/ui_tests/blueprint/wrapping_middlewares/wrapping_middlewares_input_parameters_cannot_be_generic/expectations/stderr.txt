[31;1mERROR[0m:
  [31mÃ—[0m I am not smart enough to figure out the concrete type for all the generic
  [31mâ”‚[0m parameters in `app::generic`.
  [31mâ”‚[0m There should no unassigned generic parameters in wrapping middlewares
  [31mâ”‚[0m apart from the one in `Next<_>`, but `T` does not seem to have been
  [31mâ”‚[0m assigned a concrete type.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/wrapping_middlewares/wrapping_middlewares_input_parameters_cannot_be_generic/src/lib.rs[0m:42:1]
  [31mâ”‚[0m  [2m42[0m â”‚     let mut bp = Blueprint::new();
  [31mâ”‚[0m  [2m43[0m â”‚     bp.wrap(GENERIC);
  [31mâ”‚[0m     Â· [35;1m            â”€â”€â”€â”¬â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                [35;1mâ•°â”€â”€ The wrapping middleware was registered here[0m
  [31mâ”‚[0m  [2m44[0m â”‚     bp.wrap(DOUBLY_GENERIC);
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m    â•­â”€[[36;1;4mblueprint/wrapping_middlewares/wrapping_middlewares_input_parameters_cannot_be_generic/src/lib.rs[0m:7:1]
  [31mâ”‚[0m  [2m7[0m â”‚ #[pavex::wrap]
  [31mâ”‚[0m  [2m8[0m â”‚ pub fn generic<A, T>(_next: Next<A>, _generic_input: GenericType<T>) -> Response
  [31mâ”‚[0m    Â· [35;1m                  â”¬[0m
  [31mâ”‚[0m    Â·                   [35;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m  [2m9[0m â”‚ where
  [31mâ”‚[0m    â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Specify the concrete type for `T` when registering the wrapping
  [31mâ”‚[0m         middleware against the blueprint:
  [31mâ”‚[0m         |  bp.wrap(
  [31mâ”‚[0m         |    f!(my_crate::my_middleware::<ConcreteType>),
  [31mâ”‚[0m         |  )
[31;1mERROR[0m:
  [31mÃ—[0m I am not smart enough to figure out the concrete type for all the generic
  [31mâ”‚[0m parameters in `app::doubly_generic`.
  [31mâ”‚[0m There should no unassigned generic parameters in wrapping middlewares
  [31mâ”‚[0m apart from the one in `Next<_>`, but `T` and `S` do not seem to have been
  [31mâ”‚[0m assigned a concrete type.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/wrapping_middlewares/wrapping_middlewares_input_parameters_cannot_be_generic/src/lib.rs[0m:43:1]
  [31mâ”‚[0m  [2m43[0m â”‚     bp.wrap(GENERIC);
  [31mâ”‚[0m  [2m44[0m â”‚     bp.wrap(DOUBLY_GENERIC);
  [31mâ”‚[0m     Â· [35;1m            â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                    [35;1mâ•°â”€â”€ The wrapping middleware was registered here[0m
  [31mâ”‚[0m  [2m45[0m â”‚     bp.wrap(TRIPLY_GENERIC);
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/wrapping_middlewares/wrapping_middlewares_input_parameters_cannot_be_generic/src/lib.rs[0m:15:1]
  [31mâ”‚[0m  [2m15[0m â”‚ #[pavex::wrap]
  [31mâ”‚[0m  [2m16[0m â”‚ pub fn doubly_generic<A, T, S>(_next: Next<A>, _i1: GenericType<T>, _i2: GenericType<S>) -> Response
  [31mâ”‚[0m     Â· [35;1m                         â”¬[0m[33;1m  â”¬[0m
  [31mâ”‚[0m     Â·                          [35;1mâ”‚[0m  [33;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m     Â·                          [35;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m  [2m17[0m â”‚ where
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Specify the concrete types for `T` and `S` when registering the
  [31mâ”‚[0m         wrapping middleware against the blueprint:
  [31mâ”‚[0m         |  bp.wrap(
  [31mâ”‚[0m         |    f!(my_crate::my_middleware::<ConcreteType>),
  [31mâ”‚[0m         |  )
[31;1mERROR[0m:
  [31mÃ—[0m I am not smart enough to figure out the concrete type for all the generic
  [31mâ”‚[0m parameters in `app::triply_generic`.
  [31mâ”‚[0m There should no unassigned generic parameters in wrapping middlewares
  [31mâ”‚[0m apart from the one in `Next<_>`, but `T`, `S` and `U` do not seem to have
  [31mâ”‚[0m been assigned a concrete type.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/wrapping_middlewares/wrapping_middlewares_input_parameters_cannot_be_generic/src/lib.rs[0m:44:1]
  [31mâ”‚[0m  [2m44[0m â”‚     bp.wrap(DOUBLY_GENERIC);
  [31mâ”‚[0m  [2m45[0m â”‚     bp.wrap(TRIPLY_GENERIC);
  [31mâ”‚[0m     Â· [35;1m            â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                    [35;1mâ•°â”€â”€ The wrapping middleware was registered here[0m
  [31mâ”‚[0m  [2m46[0m â”‚     bp.routes(from![crate]);
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/wrapping_middlewares/wrapping_middlewares_input_parameters_cannot_be_generic/src/lib.rs[0m:23:1]
  [31mâ”‚[0m  [2m23[0m â”‚ #[pavex::wrap]
  [31mâ”‚[0m  [2m24[0m â”‚ pub fn triply_generic<A, T, S, U>(
  [31mâ”‚[0m     Â· [35;1m                         â”¬[0m[33;1m  â”¬[0m[32;1m  â”¬[0m
  [31mâ”‚[0m     Â·                          [35;1mâ”‚[0m  [33;1mâ”‚[0m[32;1mThe generic parameter without a concrete type[0m
  [31mâ”‚[0m     Â·                          [35;1mâ”‚[0m  [33;1mThe generic parameter without a concrete type[0m
  [31mâ”‚[0m     Â·                          [35;1mâ•°â”€â”€ The generic parameter without a concrete type[0m
  [31mâ”‚[0m  [2m25[0m â”‚     _next: Next<A>,
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Specify the concrete types for `T`, `S` and `U` when registering the
  [31mâ”‚[0m         wrapping middleware against the blueprint:
  [31mâ”‚[0m         |  bp.wrap(
  [31mâ”‚[0m         |    f!(my_crate::my_middleware::<ConcreteType>),
  [31mâ”‚[0m         |  )
[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::wrapping`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:42:1]
  [31mâ”‚[0m  [2m42[0m â”‚     bp.import(from![crate]);
  [31mâ”‚[0m  [2m43[0m â”‚     bp.wrap(WRAPPING);
  [31mâ”‚[0m     Â· [35;1m            â”€â”€â”€â”€â”¬â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                 [35;1mâ•°â”€â”€ The wrapping middleware was registered here[0m
  [31mâ”‚[0m  [2m44[0m â”‚     bp.error_observer(OBSERVER);
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:22:1]
  [31mâ”‚[0m  [2m22[0m â”‚ #[pavex::wrap]
  [31mâ”‚[0m  [2m23[0m â”‚ pub fn wrapping<C>(_next: Next<C>, _s: &mut A) -> Response
  [31mâ”‚[0m     Â· [35;1m                                   â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                         [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m24[0m â”‚ where
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::observer`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:43:1]
  [31mâ”‚[0m  [2m43[0m â”‚     bp.wrap(WRAPPING);
  [31mâ”‚[0m  [2m44[0m â”‚     bp.error_observer(OBSERVER);
  [31mâ”‚[0m     Â· [35;1m                      â”€â”€â”€â”€â”¬â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                           [35;1mâ•°â”€â”€ The error observer was registered here[0m
  [31mâ”‚[0m  [2m45[0m â”‚     bp.routes(from![crate]);
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:30:1]
  [31mâ”‚[0m  [2m30[0m â”‚ #[pavex::error_observer]
  [31mâ”‚[0m  [2m31[0m â”‚ pub fn observer(_e: &pavex::Error, _s: &mut A) {
  [31mâ”‚[0m     Â· [35;1m                                   â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                         [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m32[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::A::new`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:10:1]
  [31mâ”‚[0m  [2m10[0m â”‚     impl A {
  [31mâ”‚[0m  [2m11[0m â”‚ [35;1mâ•­[0m[35;1mâ”€[0m[35;1mâ–¶[0m     #[pavex::request_scoped]
  [31mâ”‚[0m  [2m12[0m â”‚ [35;1mâ”œ[0m[35;1mâ”€[0m[35;1mâ–¶[0m     pub fn new(_r: &mut RequestHead) -> Self {
  [31mâ”‚[0m     Â· [35;1mâ•°[0m[35;1mâ”€â”€â”€[0m[35;1mâ”€[0m [35;1mThe constructor was registered here[0m
  [31mâ”‚[0m  [2m13[0m â”‚             todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:11:1]
  [31mâ”‚[0m  [2m11[0m â”‚     #[pavex::request_scoped]
  [31mâ”‚[0m  [2m12[0m â”‚     pub fn new(_r: &mut RequestHead) -> Self {
  [31mâ”‚[0m     Â· [35;1m               â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                          [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m13[0m â”‚         todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::error_handler`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:16:1]
  [31mâ”‚[0m  [2m16[0m â”‚
  [31mâ”‚[0m  [2m17[0m â”‚ [35;1mâ•­[0m[35;1mâ”€[0m[35;1mâ–¶[0m #[pavex::error_handler]
  [31mâ”‚[0m  [2m18[0m â”‚ [35;1mâ”œ[0m[35;1mâ”€[0m[35;1mâ–¶[0m pub fn error_handler(#[px(error_ref)] _e: &pavex::Error, _s: &mut A) -> Response {
  [31mâ”‚[0m     Â· [35;1mâ•°[0m[35;1mâ”€â”€â”€[0m[35;1mâ”€[0m [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m19[0m â”‚         todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:17:1]
  [31mâ”‚[0m  [2m17[0m â”‚ #[pavex::error_handler]
  [31mâ”‚[0m  [2m18[0m â”‚ pub fn error_handler(#[px(error_ref)] _e: &pavex::Error, _s: &mut A) -> Response {
  [31mâ”‚[0m     Â· [35;1m                                                         â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                                               [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m19[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
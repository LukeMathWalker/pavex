[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::wrapping`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:47:1]
  [31mâ”‚[0m  [2m47[0m â”‚     bp.request_scoped(f!(crate::constructor));
  [31mâ”‚[0m  [2m48[0m â”‚     bp.wrap(WRAPPING);
  [31mâ”‚[0m     Â· [35;1m            â”€â”€â”€â”€â”¬â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                 [35;1mâ•°â”€â”€ The wrapping middleware was registered here[0m
  [31mâ”‚[0m  [2m49[0m â”‚     bp.error_observer(f!(crate::observer));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:28:1]
  [31mâ”‚[0m  [2m28[0m â”‚ #[pavex::wrap]
  [31mâ”‚[0m  [2m29[0m â”‚ pub fn wrapping<C>(_next: Next<C>, _s: &mut B) -> Response
  [31mâ”‚[0m     Â· [35;1m                                   â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                         [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m30[0m â”‚ where
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::observer`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:48:1]
  [31mâ”‚[0m  [2m48[0m â”‚     bp.wrap(WRAPPING);
  [31mâ”‚[0m  [2m49[0m â”‚     bp.error_observer(f!(crate::observer));
  [31mâ”‚[0m     Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                [35;1mâ•°â”€â”€ The error observer was registered here[0m
  [31mâ”‚[0m  [2m50[0m â”‚     bp.route(GET, "/home", f!(crate::handler))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:35:1]
  [31mâ”‚[0m  [2m35[0m â”‚
  [31mâ”‚[0m  [2m36[0m â”‚ pub fn observer(_e: &pavex::Error, _s: &mut A) {
  [31mâ”‚[0m     Â· [35;1m                                   â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                         [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m37[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::constructor`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:46:1]
  [31mâ”‚[0m  [2m46[0m â”‚     bp.import(from![crate]);
  [31mâ”‚[0m  [2m47[0m â”‚     bp.request_scoped(f!(crate::constructor));
  [31mâ”‚[0m     Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                  [35;1mâ•°â”€â”€ The constructor was registered here[0m
  [31mâ”‚[0m  [2m48[0m â”‚     bp.wrap(WRAPPING);
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:9:1]
  [31mâ”‚[0m  [2m 9[0m â”‚
  [31mâ”‚[0m  [2m10[0m â”‚ pub fn constructor(_r: &mut RequestHead) -> B {
  [31mâ”‚[0m     Â· [35;1m                   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                              [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m11[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::A::new`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:17:1]
  [31mâ”‚[0m  [2m17[0m â”‚     impl A {
  [31mâ”‚[0m  [2m18[0m â”‚ [35;1mâ•­[0m[35;1mâ”€[0m[35;1mâ–¶[0m     #[pavex::request_scoped]
  [31mâ”‚[0m  [2m19[0m â”‚ [35;1mâ”œ[0m[35;1mâ”€[0m[35;1mâ–¶[0m     pub fn new(_r: &mut RequestHead) -> Self {
  [31mâ”‚[0m     Â· [35;1mâ•°[0m[35;1mâ”€â”€â”€[0m[35;1mâ”€[0m [35;1mThe constructor was registered here[0m
  [31mâ”‚[0m  [2m20[0m â”‚             todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:18:1]
  [31mâ”‚[0m  [2m18[0m â”‚     #[pavex::request_scoped]
  [31mâ”‚[0m  [2m19[0m â”‚     pub fn new(_r: &mut RequestHead) -> Self {
  [31mâ”‚[0m     Â· [35;1m               â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                          [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m20[0m â”‚         todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
[31;1mERROR[0m:
  [31mÃ—[0m You can't inject a mutable reference as an input parameter to
  [31mâ”‚[0m `app::error_handler`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:50:1]
  [31mâ”‚[0m  [2m50[0m â”‚     bp.route(GET, "/home", f!(crate::handler))
  [31mâ”‚[0m  [2m51[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m52[0m â”‚     bp
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cannot_take_mutable_references_as_input/src/lib.rs[0m:23:1]
  [31mâ”‚[0m  [2m23[0m â”‚
  [31mâ”‚[0m  [2m24[0m â”‚ pub fn error_handler(_e: &pavex::Error, _s: &mut B) -> Response {
  [31mâ”‚[0m     Â· [35;1m                                        â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                              [35;1mâ•°â”€â”€ The &mut input[0m
  [31mâ”‚[0m  [2m25[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Injected inputs can only be taken by value or via a shared reference
  [31mâ”‚[0m         (`&`). If you absolutely need to mutate the input, consider internal
  [31mâ”‚[0m         mutability (e.g. `RefCell`).
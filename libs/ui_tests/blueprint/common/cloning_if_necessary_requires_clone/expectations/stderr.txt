[31m[1mERROR[0m[39m: 
  [31mÃ—[0m A type must be clonable if you set its cloning strategy to
  [31mâ”‚[0m `CloneIfNecessary`.
  [31mâ”‚[0m The cloning strategy for `app::singleton` is `CloneIfNecessary`,
  [31mâ”‚[0m but `app::A`, its output type, doesn't implement the `Clone`
  [31mâ”‚[0m trait.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cloning_if_necessary_requires_clone/src/lib.rs[0m:23:1]
  [31mâ”‚[0m  [2m23[0m â”‚     bp.prebuilt(t!(crate::C)).clone_if_necessary();
  [31mâ”‚[0m  [2m24[0m â”‚     bp.singleton(f!(crate::singleton)).clone_if_necessary();
  [31mâ”‚[0m     Â· [35;1m                 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                            [35;1mâ•°â”€â”€ The constructor was registered here[0m
  [31mâ”‚[0m  [2m25[0m â”‚     bp.request_scoped(f!(crate::request_scoped))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mEither set the cloning strategy to `NeverClone` or implement `Clone`
  [31mâ”‚[0m         for `app::A`

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m A type must be clonable if you set its cloning strategy to
  [31mâ”‚[0m `CloneIfNecessary`.
  [31mâ”‚[0m The cloning strategy for `app::request_scoped` is
  [31mâ”‚[0m `CloneIfNecessary`, but `app::B`, its output type, doesn't
  [31mâ”‚[0m implement the `Clone` trait.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cloning_if_necessary_requires_clone/src/lib.rs[0m:24:1]
  [31mâ”‚[0m  [2m24[0m â”‚     bp.singleton(f!(crate::singleton)).clone_if_necessary();
  [31mâ”‚[0m  [2m25[0m â”‚     bp.request_scoped(f!(crate::request_scoped))
  [31mâ”‚[0m     Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                   [35;1mâ•°â”€â”€ The constructor was registered here[0m
  [31mâ”‚[0m  [2m26[0m â”‚         .clone_if_necessary();
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mEither set the cloning strategy to `NeverClone` or implement `Clone`
  [31mâ”‚[0m         for `app::B`

[31m[1mERROR[0m[39m: 
  [31mÃ—[0m A type must be clonable if you set its cloning strategy to
  [31mâ”‚[0m `CloneIfNecessary`.
  [31mâ”‚[0m The cloning strategy for `app::C`, a prebuilt type, is
  [31mâ”‚[0m `CloneIfNecessary`, but it doesn't implement the `Clone` trait.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cloning_if_necessary_requires_clone/src/lib.rs[0m:22:1]
  [31mâ”‚[0m  [2m22[0m â”‚     let mut bp = Blueprint::new();
  [31mâ”‚[0m  [2m23[0m â”‚     bp.prebuilt(t!(crate::C)).clone_if_necessary();
  [31mâ”‚[0m     Â· [35;1m                â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                       [35;1mâ•°â”€â”€ The prebuilt type was registered here[0m
  [31mâ”‚[0m  [2m24[0m â”‚     bp.singleton(f!(crate::singleton)).clone_if_necessary();
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mEither set the cloning strategy to `NeverClone` or implement `Clone`
  [31mâ”‚[0m         for `app::C`
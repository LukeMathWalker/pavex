[31;1mERROR[0m:
  [31mÃ—[0m `app::BrokenOutput` doesn't implement
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m It is returned by `app::handler`, one of your request handlers.
  [31mâ”‚[0m `IntoResponse` is used by Pavex to convert `app::BrokenOutput`
  [31mâ”‚[0m into the HTTP response that will be returned to the caller of your API.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:52:1]
  [31mâ”‚[0m  [2m52[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m  [2m53[0m â”‚     bp.route(GET, "/", f!(crate::handler))
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                  [35;1mThe request handler was registered here[0m
  [31mâ”‚[0m  [2m54[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:24:1]
  [31mâ”‚[0m  [2m24[0m â”‚
  [31mâ”‚[0m  [2m25[0m â”‚ pub fn handler(_a: &A, _b: B) -> Result<BrokenOutput, ErrorType> {
  [31mâ”‚[0m     Â· [35;1m                                 â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                                 [35;1mâ•°â”€â”€ The faulty output type[0m
  [31mâ”‚[0m  [2m26[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Implement `IntoResponse` for `app::BrokenOutput`.
[31;1mERROR[0m:
  [31mÃ—[0m `app::BrokenOutput` doesn't implement
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m It is returned by `app::wrap`, one of your wrapping middlewares.
  [31mâ”‚[0m `IntoResponse` is used by Pavex to convert `app::BrokenOutput`
  [31mâ”‚[0m into the HTTP response that will be returned to the caller of your API.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:48:1]
  [31mâ”‚[0m  [2m48[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m  [2m49[0m â”‚     bp.wrap(f!(crate::wrap))
  [31mâ”‚[0m     Â· [35;1m            â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                    [35;1mâ•°â”€â”€ The wrapping middleware was registered here[0m
  [31mâ”‚[0m  [2m50[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:32:1]
  [31mâ”‚[0m  [2m32[0m â”‚
  [31mâ”‚[0m  [2m33[0m â”‚ pub fn wrap<T>(_next: Next<T>) -> Result<BrokenOutput, ErrorType>
  [31mâ”‚[0m     Â· [35;1m                                  â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                         [35;1mThe faulty output type â”€â”€â•¯[0m
  [31mâ”‚[0m  [2m34[0m â”‚ where
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Implement `IntoResponse` for `app::BrokenOutput`.
[31;1mERROR[0m:
  [31mÃ—[0m `app::BrokenOutput` doesn't implement
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m It is returned by `app::pp`, one of your post-processing
  [31mâ”‚[0m middlewares.
  [31mâ”‚[0m `IntoResponse` is used by Pavex to convert `app::BrokenOutput`
  [31mâ”‚[0m into the HTTP response that will be returned to the caller of your API.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:50:1]
  [31mâ”‚[0m  [2m50[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m  [2m51[0m â”‚     bp.post_process(f!(crate::pp))
  [31mâ”‚[0m     Â· [35;1m                    â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·             [35;1mThe post-processing middleware was registered here[0m
  [31mâ”‚[0m  [2m52[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:39:1]
  [31mâ”‚[0m  [2m39[0m â”‚
  [31mâ”‚[0m  [2m40[0m â”‚ pub fn pp<T>(_response: Response) -> Result<BrokenOutput, ErrorType> {
  [31mâ”‚[0m     Â· [35;1m                                     â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                            [35;1mThe faulty output type â”€â”€â•¯[0m
  [31mâ”‚[0m  [2m41[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Implement `IntoResponse` for `app::BrokenOutput`.
[31;1mERROR[0m:
  [31mÃ—[0m `app::BrokenOutput` doesn't implement
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m It is returned by `app::error_handler`, one of your error
  [31mâ”‚[0m handlers.
  [31mâ”‚[0m `IntoResponse` is used by Pavex to convert `app::BrokenOutput`
  [31mâ”‚[0m into the HTTP response that will be returned to the caller of your API.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:47:1]
  [31mâ”‚[0m  [2m47[0m â”‚     bp.request_scoped(f!(crate::a))
  [31mâ”‚[0m  [2m48[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m49[0m â”‚     bp.wrap(f!(crate::wrap))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:28:1]
  [31mâ”‚[0m  [2m28[0m â”‚
  [31mâ”‚[0m  [2m29[0m â”‚ pub fn error_handler(_e: &ErrorType) -> BrokenOutput {
  [31mâ”‚[0m     Â· [35;1m                                        â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                               [35;1mâ•°â”€â”€ The faulty output type[0m
  [31mâ”‚[0m  [2m30[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Implement `IntoResponse` for `app::BrokenOutput`.
[31;1mERROR[0m:
  [31mÃ—[0m `app::BrokenOutput` doesn't implement
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m It is returned by `app::error_handler`, one of your error
  [31mâ”‚[0m handlers.
  [31mâ”‚[0m `IntoResponse` is used by Pavex to convert `app::BrokenOutput`
  [31mâ”‚[0m into the HTTP response that will be returned to the caller of your API.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:49:1]
  [31mâ”‚[0m  [2m49[0m â”‚     bp.wrap(f!(crate::wrap))
  [31mâ”‚[0m  [2m50[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m51[0m â”‚     bp.post_process(f!(crate::pp))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:28:1]
  [31mâ”‚[0m  [2m28[0m â”‚
  [31mâ”‚[0m  [2m29[0m â”‚ pub fn error_handler(_e: &ErrorType) -> BrokenOutput {
  [31mâ”‚[0m     Â· [35;1m                                        â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                               [35;1mâ•°â”€â”€ The faulty output type[0m
  [31mâ”‚[0m  [2m30[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Implement `IntoResponse` for `app::BrokenOutput`.
[31;1mERROR[0m:
  [31mÃ—[0m `app::BrokenOutput` doesn't implement
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m It is returned by `app::error_handler`, one of your error
  [31mâ”‚[0m handlers.
  [31mâ”‚[0m `IntoResponse` is used by Pavex to convert `app::BrokenOutput`
  [31mâ”‚[0m into the HTTP response that will be returned to the caller of your API.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:51:1]
  [31mâ”‚[0m  [2m51[0m â”‚     bp.post_process(f!(crate::pp))
  [31mâ”‚[0m  [2m52[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m53[0m â”‚     bp.route(GET, "/", f!(crate::handler))
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:28:1]
  [31mâ”‚[0m  [2m28[0m â”‚
  [31mâ”‚[0m  [2m29[0m â”‚ pub fn error_handler(_e: &ErrorType) -> BrokenOutput {
  [31mâ”‚[0m     Â· [35;1m                                        â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                               [35;1mâ•°â”€â”€ The faulty output type[0m
  [31mâ”‚[0m  [2m30[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Implement `IntoResponse` for `app::BrokenOutput`.
[31;1mERROR[0m:
  [31mÃ—[0m `app::BrokenOutput` doesn't implement
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m It is returned by `app::error_handler`, one of your error
  [31mâ”‚[0m handlers.
  [31mâ”‚[0m `IntoResponse` is used by Pavex to convert `app::BrokenOutput`
  [31mâ”‚[0m into the HTTP response that will be returned to the caller of your API.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:53:1]
  [31mâ”‚[0m  [2m53[0m â”‚     bp.route(GET, "/", f!(crate::handler))
  [31mâ”‚[0m  [2m54[0m â”‚         .error_handler(f!(crate::error_handler));
  [31mâ”‚[0m     Â· [35;1m                       â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                   [35;1mThe error handler was registered here[0m
  [31mâ”‚[0m  [2m55[0m â”‚     bp
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:28:1]
  [31mâ”‚[0m  [2m28[0m â”‚
  [31mâ”‚[0m  [2m29[0m â”‚ pub fn error_handler(_e: &ErrorType) -> BrokenOutput {
  [31mâ”‚[0m     Â· [35;1m                                        â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                               [35;1mâ•°â”€â”€ The faulty output type[0m
  [31mâ”‚[0m  [2m30[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Implement `IntoResponse` for `app::BrokenOutput`.
[31;1mERROR[0m:
  [31mÃ—[0m `app::BrokenOutput` doesn't implement
  [31mâ”‚[0m `pavex::response::IntoResponse`.
  [31mâ”‚[0m It is returned by `app::error_handler`, one of your error
  [31mâ”‚[0m handlers.
  [31mâ”‚[0m `IntoResponse` is used by Pavex to convert `app::BrokenOutput`
  [31mâ”‚[0m into the HTTP response that will be returned to the caller of your API.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:13:1]
  [31mâ”‚[0m  [2m13[0m â”‚
  [31mâ”‚[0m  [2m14[0m â”‚ #[pavex::transient(error_handler = "crate::error_handler")]
  [31mâ”‚[0m     Â· [35;1m                                   â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·       [35;1mThe error handler was registered here â”€â”€â•¯[0m
  [31mâ”‚[0m  [2m15[0m â”‚ pub fn b() -> Result<B, ErrorType> {
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/output_type_must_implement_into_response/src/lib.rs[0m:28:1]
  [31mâ”‚[0m  [2m28[0m â”‚
  [31mâ”‚[0m  [2m29[0m â”‚ pub fn error_handler(_e: &ErrorType) -> BrokenOutput {
  [31mâ”‚[0m     Â· [35;1m                                        â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                               [35;1mâ•°â”€â”€ The faulty output type[0m
  [31mâ”‚[0m  [2m30[0m â”‚     todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Implement `IntoResponse` for `app::BrokenOutput`.
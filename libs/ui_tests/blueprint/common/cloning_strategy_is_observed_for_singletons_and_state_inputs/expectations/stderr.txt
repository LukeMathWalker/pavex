[31;1mERROR[0m:
  [31mÃ—[0m I can't generate code that will pass the borrow checker *and* match the
  [31mâ”‚[0m instructions in your blueprint.
  [31mâ”‚[0m `app::handler` consumes `app::C` by value,
  [31mâ”‚[0m but `app::C` is a singleton and can't be moved out of
  [31mâ”‚[0m `ApplicationState`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cloning_strategy_is_observed_for_singletons_and_state_inputs/src/lib.rs[0m:18:1]
  [31mâ”‚[0m  [2m18[0m â”‚
  [31mâ”‚[0m  [2m19[0m â”‚ [35;1mâ•­[0m[35;1mâ”€[0m[35;1mâ–¶[0m #[pavex::singleton(id = "C_")]
  [31mâ”‚[0m  [2m20[0m â”‚ [35;1mâ”œ[0m[35;1mâ”€[0m[35;1mâ–¶[0m pub fn c(_b: B) -> C {
  [31mâ”‚[0m     Â· [35;1mâ•°[0m[35;1mâ”€â”€â”€[0m[35;1mâ”€[0m [35;1mIt was registered here[0m
  [31mâ”‚[0m  [2m21[0m â”‚         todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Allow Pavex to clone `app::C` by marking it
  [31mâ”‚[0m         `clone_if_necessary`.
  [31mâ”‚[0m   [36mhelp:[0m Can `app::handler` take a reference to `app::C`,
  [31mâ”‚[0m         rather than consuming it by value?
[31;1mERROR[0m:
  [31mÃ—[0m I can't generate code that will pass the borrow checker *and* match the
  [31mâ”‚[0m instructions in your blueprint.
  [31mâ”‚[0m `app::handler` consumes `app::B` by value,
  [31mâ”‚[0m but `app::B` is a singleton and can't be moved out of
  [31mâ”‚[0m `ApplicationState`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cloning_strategy_is_observed_for_singletons_and_state_inputs/src/lib.rs[0m:6:1]
  [31mâ”‚[0m  [2m 6[0m â”‚
  [31mâ”‚[0m  [2m 7[0m â”‚ [35;1mâ•­[0m[35;1mâ”€[0m[35;1mâ–¶[0m #[derive(Clone)]
  [31mâ”‚[0m  [2m 8[0m â”‚ [35;1mâ”‚[0m   #[pavex::prebuilt(id = "B_")]
  [31mâ”‚[0m  [2m 9[0m â”‚ [35;1mâ”œ[0m[35;1mâ”€[0m[35;1mâ–¶[0m pub struct B;
  [31mâ”‚[0m     Â· [35;1mâ•°[0m[35;1mâ”€â”€â”€[0m[35;1mâ”€[0m [35;1mIt was registered here[0m
  [31mâ”‚[0m  [2m10[0m â”‚
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Allow Pavex to clone `app::B` by marking it
  [31mâ”‚[0m         `clone_if_necessary`.
  [31mâ”‚[0m   [36mhelp:[0m Can `app::handler` take a reference to `app::B`,
  [31mâ”‚[0m         rather than consuming it by value?
[31;1mERROR[0m:
  [31mÃ—[0m I can't generate code that will pass the borrow checker *and* match the
  [31mâ”‚[0m instructions in your blueprint.
  [31mâ”‚[0m `app::handler` consumes `app::A` by value,
  [31mâ”‚[0m but `app::A` is a singleton and can't be moved out of
  [31mâ”‚[0m `ApplicationState`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/common/cloning_strategy_is_observed_for_singletons_and_state_inputs/src/lib.rs[0m:13:1]
  [31mâ”‚[0m  [2m13[0m â”‚
  [31mâ”‚[0m  [2m14[0m â”‚ [35;1mâ•­[0m[35;1mâ”€[0m[35;1mâ–¶[0m #[pavex::singleton(id = "A_")]
  [31mâ”‚[0m  [2m15[0m â”‚ [35;1mâ”œ[0m[35;1mâ”€[0m[35;1mâ–¶[0m pub fn a() -> A {
  [31mâ”‚[0m     Â· [35;1mâ•°[0m[35;1mâ”€â”€â”€[0m[35;1mâ”€[0m [35;1mIt was registered here[0m
  [31mâ”‚[0m  [2m16[0m â”‚         todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Allow Pavex to clone `app::A` by marking it
  [31mâ”‚[0m         `clone_if_necessary`.
  [31mâ”‚[0m   [36mhelp:[0m Can `app::handler` take a reference to `app::A`,
  [31mâ”‚[0m         rather than consuming it by value?
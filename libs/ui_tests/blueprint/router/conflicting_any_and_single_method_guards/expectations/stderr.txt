[31;1mERROR[0m:
  [31mÃ—[0m There are 2 different request handlers for `GET /bp/` requests.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/router/conflicting_any_and_single_method_guards/src/lib.rs[0m:30:1]
  [31mâ”‚[0m  [2m30[0m â”‚         let mut bp = Blueprint::new();
  [31mâ”‚[0m  [2m31[0m â”‚         bp.route(ANY, "/", f!(crate::handler_1));
  [31mâ”‚[0m     Â· [35;1m                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                      [35;1mâ•°â”€â”€ The first handler[0m
  [31mâ”‚[0m  [2m32[0m â”‚         bp.route(GET, "/", f!(crate::handler_2));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/router/conflicting_any_and_single_method_guards/src/lib.rs[0m:31:1]
  [31mâ”‚[0m  [2m31[0m â”‚         bp.route(ANY, "/", f!(crate::handler_1));
  [31mâ”‚[0m  [2m32[0m â”‚         bp.route(GET, "/", f!(crate::handler_2));
  [31mâ”‚[0m     Â· [35;1m                           â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                                      [35;1mâ•°â”€â”€ The second handler[0m
  [31mâ”‚[0m  [2m33[0m â”‚         bp
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m You can only register one request handler for a given path+method
  [31mâ”‚[0m         combination. Remove all but one of the conflicting request handlers.
[31;1mERROR[0m:
  [31mÃ—[0m There are 2 different request handlers for `GET /` requests.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/router/conflicting_any_and_single_method_guards/src/lib.rs[0m:15:1]
  [31mâ”‚[0m  [2m15[0m â”‚
  [31mâ”‚[0m  [2m16[0m â”‚ [35;1mâ•­[0m[35;1mâ”€[0m[35;1mâ–¶[0m #[pavex::get(path = "/")]
  [31mâ”‚[0m  [2m17[0m â”‚ [35;1mâ”œ[0m[35;1mâ”€[0m[35;1mâ–¶[0m pub fn handler_ann_1() -> pavex::response::Response {
  [31mâ”‚[0m     Â· [35;1mâ•°[0m[35;1mâ”€â”€â”€[0m[35;1mâ”€[0m [35;1mThe first handler[0m
  [31mâ”‚[0m  [2m18[0m â”‚         todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m     â•­â”€[[36;1;4mblueprint/router/conflicting_any_and_single_method_guards/src/lib.rs[0m:20:1]
  [31mâ”‚[0m  [2m20[0m â”‚
  [31mâ”‚[0m  [2m21[0m â”‚ [35;1mâ•­[0m[35;1mâ”€[0m[35;1mâ–¶[0m #[pavex::route(path = "/", allow(any_method))]
  [31mâ”‚[0m  [2m22[0m â”‚ [35;1mâ”œ[0m[35;1mâ”€[0m[35;1mâ–¶[0m pub fn handler_ann_2() -> pavex::response::Response {
  [31mâ”‚[0m     Â· [35;1mâ•°[0m[35;1mâ”€â”€â”€[0m[35;1mâ”€[0m [35;1mThe second handler[0m
  [31mâ”‚[0m  [2m23[0m â”‚         todo!()
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m You can only register one request handler for a given path+method
  [31mâ”‚[0m         combination. Remove all but one of the conflicting request handlers.
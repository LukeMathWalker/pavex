[31m[1mERROR[0m[39m: 
  [31mÃ—[0m `app::B<'a>` can't be a singleton because at least one of its
  [31mâ”‚[0m lifetime parameters isn't `'static`.
  [31mâ”‚[0m Singletons must be available for as long as the application is running,
  [31mâ”‚[0m therefore their lifetime must be `'static`.
  [31mâ”‚[0m
  [31mâ”‚[0m     â•­â”€[[36;1;4mdependency_injection/lifecycles/singletons_cannot_have_non_static_lifetime_parameters/src/lib.rs[0m:26:1]
  [31mâ”‚[0m  [2m26[0m â”‚     bp.singleton(f!(self::a));
  [31mâ”‚[0m  [2m27[0m â”‚     bp.singleton(f!(self::B::new)).clone_if_necessary();
  [31mâ”‚[0m     Â· [35;1m                 â”€â”€â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m     Â·                          [35;1mâ•°â”€â”€ The singleton was registered here[0m
  [31mâ”‚[0m  [2m28[0m â”‚     bp.route(GET, "/", f!(self::handler));
  [31mâ”‚[0m     â•°â”€â”€â”€â”€
  [31mâ”‚[0m [36m  help: [0mIf your type holds a reference to data that's owned by another
  [31mâ”‚[0m         singleton component, register its constructor as transient rather
  [31mâ”‚[0m         than singleton.
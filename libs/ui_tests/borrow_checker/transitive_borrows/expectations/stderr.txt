[31m[1mERROR[0m[39m: 
  [31mÃ—[0m I can't generate code that will pass the borrow checker *and* match the
  [31mâ”‚[0m instructions in your blueprint:
  [31mâ”‚[0m - `app::handler` wants to consume `app::C<'_>`
  [31mâ”‚[0m - `app::C<'_>` captures a reference to `app::A`
  [31mâ”‚[0m - But, earlier on, `app::b` consumed `app::A` by value
  [31mâ”‚[0m 
  [31mâ”‚[0m Since I'm not allowed to clone `app::A`, I can't resolve this
  [31mâ”‚[0m conflict.
  [31mâ”‚[0m
  [31mâ”‚[0m   [36mhelp:[0m Allow me to clone `app::A` in order to satisfy the borrow
  [31mâ”‚[0m         checker.
  [31mâ”‚[0m         You can do so by invoking `.clone_if_necessary()` after having
  [31mâ”‚[0m         registered your constructor.
  [31mâ”‚[0m        â˜ž
  [31mâ”‚[0m           â•­â”€[[36;1;4mborrow_checker/transitive_borrows/src/lib.rs[0m:45:1]
  [31mâ”‚[0m        [2m45[0m â”‚     let mut bp = Blueprint::new();
  [31mâ”‚[0m        [2m46[0m â”‚     bp.request_scoped(f!(crate::a));
  [31mâ”‚[0m           Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m           Â·                             [35;1mâ•°â”€â”€ The constructor was registered here[0m
  [31mâ”‚[0m        [2m47[0m â”‚     bp.request_scoped(f!(crate::b));
  [31mâ”‚[0m           â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Consider changing the signature of `app::b`.
  [31mâ”‚[0m         It takes `app::A` by value. Would a shared reference,
  [31mâ”‚[0m         `&app::A`, be enough?
  [31mâ”‚[0m   [36mhelp:[0m If `app::A` itself cannot implement `Clone`, consider
  [31mâ”‚[0m         wrapping it in an `std::sync::Rc` or `std::sync::Arc`.
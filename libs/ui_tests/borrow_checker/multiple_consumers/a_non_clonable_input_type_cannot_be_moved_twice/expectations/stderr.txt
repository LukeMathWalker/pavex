[31m[1mERROR[0m[39m: 
  [31mÃ—[0m I can't generate code that will pass the borrow checker *and* match the
  [31mâ”‚[0m instructions in your blueprint.
  [31mâ”‚[0m There are 2 components that take `app::A` as an input parameter,
  [31mâ”‚[0m consuming it by value:
  [31mâ”‚[0m - `app::b`, a constructor
  [31mâ”‚[0m - `app::c`, a constructor
  [31mâ”‚[0m Since I'm not allowed to clone `app::A`, I can't resolve this
  [31mâ”‚[0m conflict.
  [31mâ”‚[0m 
  [31mâ”‚[0m
  [31mâ”‚[0m   [36mhelp:[0m Allow me to clone `app::A` in order to satisfy the borrow
  [31mâ”‚[0m         checker.
  [31mâ”‚[0m         You can do so by invoking `.cloning(CloningStrategy::CloneIfNecessary)`
  [31mâ”‚[0m         on the type returned by `.constructor`.
  [31mâ”‚[0m        â˜ž
  [31mâ”‚[0m           â•­â”€[[36;1;4mborrow_checker/multiple_consumers/a_non_clonable_input_type_cannot_be_moved_twice/src/lib.rs[0m:41:1]
  [31mâ”‚[0m        [2m41[0m â”‚     // `A` is a singleton, therefore it will be an input of the dependency closure for the handler
  [31mâ”‚[0m        [2m42[0m â”‚     bp.singleton(f!(crate::a));
  [31mâ”‚[0m           Â· [35;1m                 â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m           Â·                        [35;1mâ•°â”€â”€ The constructor was registered here[0m
  [31mâ”‚[0m        [2m43[0m â”‚     bp.request_scoped(f!(crate::b));
  [31mâ”‚[0m           â•°â”€â”€â”€â”€
  [31mâ”‚[0m   [36mhelp:[0m Considering changing the signature of the components that consume
  [31mâ”‚[0m         `app::A` by value.
  [31mâ”‚[0m         Would a shared reference, `&app::A`, be enough?
  [31mâ”‚[0m        â˜ž
  [31mâ”‚[0m           â•­â”€[[36;1;4mborrow_checker/multiple_consumers/a_non_clonable_input_type_cannot_be_moved_twice/src/lib.rs[0m:42:1]
  [31mâ”‚[0m        [2m42[0m â”‚     bp.singleton(f!(crate::a));
  [31mâ”‚[0m        [2m43[0m â”‚     bp.request_scoped(f!(crate::b));
  [31mâ”‚[0m           Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m           Â·                             [35;1mâ•°â”€â”€ One of the consuming constructors[0m
  [31mâ”‚[0m        [2m44[0m â”‚     bp.request_scoped(f!(crate::c));
  [31mâ”‚[0m           â•°â”€â”€â”€â”€
  [31mâ”‚[0m        â˜ž
  [31mâ”‚[0m           â•­â”€[[36;1;4mborrow_checker/multiple_consumers/a_non_clonable_input_type_cannot_be_moved_twice/src/lib.rs[0m:43:1]
  [31mâ”‚[0m        [2m43[0m â”‚     bp.request_scoped(f!(crate::b));
  [31mâ”‚[0m        [2m44[0m â”‚     bp.request_scoped(f!(crate::c));
  [31mâ”‚[0m           Â· [35;1m                      â”€â”€â”€â”€â”€â”€â”¬â”€â”€â”€â”€â”€[0m
  [31mâ”‚[0m           Â·                             [35;1mâ•°â”€â”€ One of the consuming constructors[0m
  [31mâ”‚[0m        [2m45[0m â”‚     bp.route(GET, "/home", f!(crate::handler));
  [31mâ”‚[0m           â•°â”€â”€â”€â”€